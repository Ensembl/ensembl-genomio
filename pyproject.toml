# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pyproject.toml -- Ensembl GenomIO project configuration

## Generic configuration
[project]
name = "ensembl-genomio"
dynamic = [
    "version",
]
requires-python = ">= 3.10"
description = "Ensembl GenomIO -- pipelines to convert basic genomic data into Ensembl cores and back to flatfile"
readme = "README.md"
authors = [
    {name = "Ensembl", email = "dev@ensembl.org"},
]
license = {text = "Apache License 2.0"}
keywords = [
    "genome_io",
    "ensembl",
    "bioinformatics",
    "annotation",
    "setup",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "bcbio-gff == 0.7.1",
    "biopython >= 1.81",
    "ensembl-py >= 2.1.2",
    "ensembl-utils >= 0.4.4",
    "jsonschema >= 4.6.0",
    "intervaltree >= 3.1.0",
    "mysql-connector-python >= 8.0.29",
    "python-redmine >= 2.3.0",
    "requests >= 2.28.0",
    "spython >= 0.3.13",
]

[project.optional-dependencies]
build = [
    "build",
    "setuptools",
    "setuptools-scm",
    "wheel",
]
cicd = [
    "black >= 23.11.0",
    "coverage >= 7.3.2",
    "deepdiff >= 6.7.1",
    "genbadge[coverage]",
    "mypy >= 1.2.0",
    "pylint >= 3.0.2",
    "pytest >= 7.4.3",
    "pytest-dependency",
    "pytest-mock",
    "pytest-workflow >= 2.1.0",
    "types-requests",
]
docs = [
    "mkdocs >= 1.5.3",
    "mkdocs-autorefs",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-material",
    "mkdocs-material-extensions",
    "mkdocs-section-index",
    "mkdocstrings",
    "mkdocstrings-python",
]
# Database dependencies
mysql = [
    "ensembl-utils[mysql]",
]

[project.urls]
homepage = "https://www.ensembl.org"
repository = "https://github.com/Ensembl/ensembl-genomio"
documentation = "https://ensembl.github.io/ensembl-genomio"

[project.scripts]
# Assembly
assembly_download = "ensembl.io.genomio.assembly.download:main"
assembly_tracker = "ensembl.io.genomio.assembly.status:main"
# Database
database_factory = "ensembl.io.genomio.database.factory:main"
# Events
events_dump = "ensembl.io.genomio.events.dump:main"
events_load = "ensembl.io.genomio.events.load:main"
events_format = "ensembl.io.genomio.events.format:main"
# Fasta
fasta_chunk = "ensembl.io.genomio.fasta.chunk:main"
fasta_process = "ensembl.io.genomio.fasta.process:main"
# GenBank
genbank_download = "ensembl.io.genomio.genbank.download:main"
genbank_extract_data = "ensembl.io.genomio.genbank.extract_data:main"
# Genome metadata
genome_metadata_dump = "ensembl.io.genomio.genome_metadata.dump:main"
genome_metadata_extend = "ensembl.io.genomio.genome_metadata.extend:main"
genome_metadata_prepare = "ensembl.io.genomio.genome_metadata.prepare:main"
# Genome statistics
genome_stats_compare = "ensembl.io.genomio.genome_stats.compare:main"
genome_stats_dump = "ensembl.io.genomio.genome_stats.dump:main"
# GFF3
gff3_process = "ensembl.io.genomio.gff3.process:main"
gff3_overlaps = "ensembl.io.genomio.gff3.overlaps:main"
# annotation
annotation_update_description = "ensembl.io.genomio.annotation.update_description:main"
# Manifest
manifest_check_integrity = "ensembl.io.genomio.manifest.check_integrity:main"
manifest_compute_stats = "ensembl.io.genomio.manifest.compute_stats:main"
manifest_generate = "ensembl.io.genomio.manifest.generate:main"
# Schemas
schemas_json_factory = "ensembl.io.genomio.schemas.json.factory:main"
schemas_json_validate = "ensembl.io.genomio.schemas.json.validate:main"
# Sequence region
seq_region_dump = "ensembl.io.genomio.seq_region.dump:main"
seq_region_prepare = "ensembl.io.genomio.seq_region.prepare:main"
seq_region_rename = "ensembl.io.genomio.seq_region.rename:main"

[tool.setuptools]
package-dir = {"" = "src/python"}

[tool.setuptools.dynamic]
version = {attr = "ensembl.io.genomio.__version__"}

[tool.setuptools.packages.find]
where = ["src/python"]  # list of folders that contain the packages (["."] by default)

# For additional information on `setuptools` configuration see:
#    https://setuptools.pypa.io/en/latest/userguide/quickstart.html
#    https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
#    https://packaging.python.org/en/latest/specifications/declaring-project-metadata/

[build-system]
requires = [
    "setuptools",
    "setuptools-scm",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 110

[tool.pylint.main]
max-line-length = 110
disable = [
    "invalid-name",
    "logging-fstring-interpolation",
    "similarities",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-statements",
    "unspecified-encoding",
    "wildcard-import",
]
max-attributes = 12
max-branches = 15

[tool.ruff]
line-length = 110
show-fixes = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
# Ignore `F403` (unable to detect undefined names) in all `__init__.py` files
"__init__.py" = ["F403"]

[tool.mypy]
mypy_path = "src/python"
disallow_untyped_defs = true
explicit_package_bases = true
ignore_missing_imports = true
show_error_codes = true
warn_unused_configs = true
disable_error_code = "method-assign"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--tb=native",
]
testpaths = ["src/python/tests"]
norecursedirs = ["data", "docs", "*.egg_info"]

[tool.coverage.run]
branch = true
source = [
    "ensembl.io.genomio",
]

[tool.coverage.report]
exclude_lines = [
    # Do not complain about missing debug-only code
    "def __repr__",
    "if self\\.debug",
    # Do not complain if tests do not hit defensive assertion code
    "raise AssertionError",
    "raise NotImplementedError",
    # Do not complain if non-runnable code is not run
    "if __name__ == .__main__.:",
    "def main",
    # Do not complain about abstract methods, they are not run
    "@(abc\\.)?abstractmethod",
]
