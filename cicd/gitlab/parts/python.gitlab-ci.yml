# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Python related part of the Ensembl/ensembl-genomio CI/CD pipeline

variables:
  # Commands for running static analyses
  PYLINT_CMD: pylint --rcfile pyproject.toml
  MYPY_CMD: mypy --config-file pyproject.toml
  BLACK_CMD: black --config pyproject.toml


# Build stage instances

## Prepare and load the Python virtual environment

python:prepare_venv:
  stage: test
  artifacts:
    paths:
      - $RUN_DIR
  before_script:
    - python --version  # for debugging
    - python -m venv $RUN_DIR/venv
    - source $RUN_DIR/venv/bin/activate
  script:
    - pip install -e .[dev]


# Test stage instances

# A generic job to be used by various Python tests to be reused with `extends` mechanism
# (https://docs.gitlab.com/ee/ci/yaml/#extends)
.python:generic:
  stage: test
  needs:
    # Using `needs` as it allows to depend on jobs from the same stage
    # (https://docs.gitlab.com/ee/ci/yaml/#needs)
    - job: python:prepare_venv
      artifacts: true
  before_script:
    - source $RUN_DIR/venv/bin/activate

## Static analyses

python:pylint:
  extends: .python:generic
  script:
    - $PYLINT_CMD src/python/ensembl/io/genomio src/python/tests

python:mypy:src:
  extends: .python:generic
  script:
    - $MYPY_CMD src/python/ensembl/io

python:mypy:tests:
  extends: .python:generic
  allow_failure: true
  script:
    - $MYPY_CMD src/python/tests

python:black:
  extends: .python:generic
  allow_failure: true
  script:
    - $BLACK_CMD --verbose --check .

## Unit tests and coverage

python:pytest:
  extends: .python:generic
  script:
    - coverage run -m pytest --junitxml=junit_reports.xml
    - coverage xml -o cobertura_coverage.xml
    - coverage html -d coverage
    - coverage report
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      junit: junit_reports.xml
      coverage_report:
        coverage_format: cobertura
        path: cobertura_coverage.xml
    paths:
      - junit_reports.xml
      - coverage/


# Deploy stage instances

## Generate GitLab pages with HTML coverage report

pages:
  when: manual
  stage: deploy
  dependencies:
    - python:pytest
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
  # only:
  #   - main

