# copy from gff_metaparser.conf mostly

# patching gff to use proper stable IDs 

# type aliases
@GENE	ALIAS	gene,ncrna_gene,pseudogene
@MRNA	ALIAS	mrna,transcript,pseudogenic_transcript,pseudogenic_trna,guide_rna,lnc_rna,telomerase_RNA
@MRNA	ALIAS	rnase_mrp_rna,rnase_p_rna,srp_rna,ncrna,rrna,snrna,snorna,trna,pre_mirna,mirna,pirna
@MRNA	ALIAS	IG_V_gene,IG_C_gene,TR_C_gene,TR_V_gene,V_gene_segment,C_gene_segment,antisense_RNA
@MRNA	ALIAS	scrna,scarna
@UTR	ALIAS	five_prime_UTR,three_prime_UTR

@DESCR	ALIAS	description,fullname,product
@BIOTYPE	ALIAS	gene_biotype,biotype

# case insesitive (all to lower)
#@GENE
@GENE/name	GFF_SUB	ID	{"_FROM_STASH":{"_IGNORE": ["Trna", "ND", "COX", "ATP", "ND", "CYTB"]}}
@GENE/id	JSON	gene/id	{"object_type":"gene"}
@GENE/name	JSON_SUB	gene/id	{"object_type":"gene", "_IGNORE" : ["Trna", "ND", "COX", "ATP", "ND", "CYTB"]}

@GENE/id	JSON	gene/@synonyms
@GENE/name	JSON	gene/@synonyms	

@GENE/@BIOTYPE	GFF	biotype
@GENE/@DESCR	JSON	gene/!description	{"_IGNORE":"hypothetical protein"}

@GENE/dbxref	JSON	gene/@xrefs	{"_SPLIT":":;dbname;id", "_MAP":{"GeneID":"GeneID"}} # ,"_IGNORE_REST":true}}

#@MRNA
@MRNA/name	GFF_SUB	ID	{"_FROM_STASH":{"_IGNORE": ["Trna"]}}
@MRNA/id	JSON	mrna/id	{"object_type":"transcript"}
@MRNA/name	JSON_SUB	mrna/id	{"object_type":"transcript", "_IGNORE" : ["Trna"]}

@MRNA/id	JSON	mrna/@synonyms	
@MRNA/name	JSON	mrna/@synonyms	

@MRNA/parent	GFF	# obsolete
@MRNA/@BIOTYPE	GFF	biotype
@MRNA/product	JSON	gene:_PARENT/!description	{"_IGNORE":"hypothetical protein"}
@MRNA/stop_codon_redefined_as_selenocysteine	JSON	mrna/force_stop_to_sec	{"force_stop_to_sec":true}

# no @UTR/id
@UTR/parent	GFF	# obsolete

# no exon/id
exon/parent	GFF	# obsolete
exon/@BIOTYPE	GFF	biotype

# cds/parent	GFF	# we'll be preserved automatically
cds/name	GFF_SUB	ID,protein_id # overwrite and copy
cds/name	JSON	cds/id	{"object_type":"translation"}

cds/id	JSON	cds/@synonyms	
cds/name	JSON	cds/@synonyms	


# transposable element
transposable_element/id	GFF


# SEQ_REGIONS
#   filter them into a separate file

# IDS
@SEQR4ID	ALIAS	chromosome_band,centromere,region,scaffold

@SEQR4ID	JSON	seq_region:_SEQID	{"object_type":"seq_region", "name":"_SEQID"}	# even for plain features, without qualifiers 
#special case for codon_table
cds/transl_table	JSON	seq_region:_SEQID/codon_table	{"object_type":"seq_region", "name":"_SEQID", "_NUMVAL" : "int"}

# aliases
region/name	JSON	seq_region:_SEQID/@synonyms/name	{"_IGNORE":"Unknown"}
region/alias	JSON	seq_region:_SEQID/@synonyms/name	{"_IGNORE":"Unknown"}
scaffold/alias	JSON	seq_region:_SEQID/@synonyms/name	{"_IGNORE":"Unknown"}
region/chromosome	JSON	seq_region:_SEQID/@synonyms/name	{"_IGNORE":"Unknown"}

# is_circular
region/is_circular	JSON	seq_region:_SEQID/circular	{"circular":true}

# location
region/genome	JSON	seq_region:_SEQID/location	{"_MAP": {"chromosome":"nuclear_chromosome", "genomic":"nuclear_chromosome", "mitochondrion":"mitochondrial_chromosome", "apicoplast":"apicoplast_chromosome", "chloroplast":"chloroplast_chromosome"}}

# coord system level, ignore Uknown and genomic
region/genome	JSON	seq_region:_SEQID/coord_system_level	{ "_MAP": {"chromosome":"chromosome", "mitochondrion":"chromosome", "apicoplast":"chromosome", "plasmid": "chromosome", "chloroplast":"chromosome", "genomic":null}, "_IGNORE":["Unknown", "genomic"] }

# karyotype bands
chromosome_band/name	JSON	seq_region:_SEQID/@karyotype_bands/name	{"_SUB":"^band-?;", "start":"_START", "end":"_END"}

centromere/id	JSON	seq_region:_SEQID/@karyotype_bands/name	{"stain":"ACEN", "structure":"centromere", "start":"_START", "end":"_END"}
telomere/id	JSON	seq_region:_SEQID/@karyotype_bands/name	{"stain":"TEL", "structure":"telomere", "start":"_START", "end":"_END"}

# various stuff as karyotype_bands
d_loop/id	JSON	seq_region:_SEQID/@karyotype_bands/name	{ "name": "D_loop", "start":"_START", "end":"_END" }
