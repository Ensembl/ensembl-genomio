# flybase config

# copy from gff_metaparser.conf
@GENE	ALIAS	gene,ncrna_gene,pseudogene
@MRNA	ALIAS	mrna,transcript,pseudogenic_transcript,guide_rna,lnc_rna
@MRNA	ALIAS	rnase_mrp_rna,rnase_p_rna,srp_rna,ncrna,rrna,snrna,snorna,trna,pre_mirna,mirna
@UTR	ALIAS	five_prime_UTR,three_prime_UTR

@DESCR	ALIAS	description,fullname,product
@BIOTYPE	ALIAS	gene_biotype,biotype

# case insesitive (all to lower)
#@GENE
@GENE/id	GFF
@GENE/@BIOTYPE	GFF	biotype
@GENE/id	JSON	gene/id	{"object_type":"gene"}
@GENE/name	JSON	gene/@synonyms/synonym	{"default":true}
@GENE/@DESCR	JSON	gene/!description	{"_IGNORE":"hypothetical protein"}
@GENE/dbxref	JSON	gene/@xrefs	{"_SPLIT":":;dbname;id", "_MAP":{"UniProt/Swiss-Prot":"Uniprot/SWISSPROT", "GB":"GenBank"}}
@GENE/Ontology_term	JSON	gene/@xrefs	{"_SPLIT":":;dbname;id"}

#@MRNA
@MRNA/id GFF
@MRNA/parent	GFF	# obsolete
@MRNA/@BIOTYPE	GFF	biotype
@MRNA/id	JSON	mrna/id	{"object_type":"transcript"}
@MRNA/name	JSON	mrna/@synonyms/synonym	{"default":true}
@MRNA/product	JSON	gene:_PARENT/!description	{"_IGNORE":"hypothetical protein"}
@MRNA/dbxref	JSON	mrna/@xrefs	{"_SPLIT":":;dbname;id", "_MAP":{"UniProt/Swiss-Prot":"Uniprot/SWISSPROT", "GB":"GenBank"}}
@MRNA/stop_codon_redefined_as_selenocysteine	JSON	mrna/force_stop_to_sec	{"force_stop_to_sec":true}

# no @UTR/id
@UTR/parent	GFF	# obsolete

# no exon/id
exon/parent	GFF	# obsolete
exon/@BIOTYPE	GFF	biotype

# transposable element
transposable_element/id	GFF
transposable_element/id	JSON	transposable_element/id	{"object_type":"transposable_element"}
transposable_element/name	JSON	transposable_element/@synonyms/synonym	{"default":true}

# chromosome bands
chromosome_band/name	JSON	seq_region:_SEQID/@karyotype_bands/name	{"_SUB":"^band-?;", "start":"_START", "end":"_END"}


# part that's different

# CDS with no IDs and other quals
#   not using the default "keep empty" approach
cds/parent	GFF	parent	{"_FROM_STASH":{"ID": "mrna:_PARENT/_STASH/cds_id"}}

@PROTEIN	ALIAS	protein,polypeptide

@PROTEIN/derives_from	JSON	mrna:_LEAFVALUE/_STASH/cds_id	{"cds_id":"_ID"}

@PROTEIN/id	JSON	cds/id	{"object_type":"translation"}
@PROTEIN/name	JSON	cds/@synonyms/synonym	{"default":true}
@PROTEIN/alias	JSON	cds/@synonyms
@PROTEIN/dbxref	JSON	cds/@xrefs	{"_SPLIT":":;dbname;id", "_MAP":{"UniProt/Swiss-Prot":"Uniprot/SWISSPROT", "GB":"GenBank"}}


# special xrefs
@GENE/id	JSON	gene/@xrefs/id	{"dbname":"flybase_gene_id", "id":"_ID", "_IGNORE" : "_df_"}
@GENE/name	JSON	gene/@xrefs/display_id	{"dbname":"FlyBaseName_gene", "id":"_ID"}

@MRNA/id	JSON	mrna/@xrefs/id	{"dbname":"flybase_transcript_id", "id":"_ID", "_IGNORE" : "_df_"}
@MRNA/name	JSON	mrna/@xrefs/display_id	{"dbname":"FlyBaseName_transcript", "id":"_ID"}

@PROTEIN/id	JSON	cds/@xrefs/id	{"dbname":"flybase_translation_id", "id":"_ID", "_IGNORE" : "_df_"}
@PROTEIN/name	JSON	cds/@xrefs/display_id	{"dbname":"FlyBaseName_translation", "id":"_ID"}


# use golden_path_region instead of region
@SEQR4ID	ALIAS	golden_path_region,golden_path
@SEQR4ID	JSON	seq_region:_SEQID	{"object_type":"seq_region", "name":"_SEQID"}

# aliases
@SEQR4ID/name	JSON	seq_region:_SEQID/@synonyms/name	{"_IGNORE":"Unknown"}
@SEQR4ID/dbxref	JSON	seq_region:_SEQID/@synonyms	{"_SPLIT":":;source;name", "_MAP": {"GB":"GenBank", "REFSEQ":"RefSeq"} }

# mark as chromosome
chromosome_band	JSON	seq_region:_SEQID	{ "coord_system_level" : "chromosome", "location":"nuclear_chromosome" }
 
# is_circular and transl_table not found
# @SEQR4ID/is_circular	JSON	seq_region:_SEQID/circular	{"circular":true}
# cds/transl_table	JSON	seq_region:_SEQID/codon_table	{"object_type":"seq_region", "name":"_SEQID", "_NUMVAL" : "int"}

